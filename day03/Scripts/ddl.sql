/*
   요구사항
   음료수 판매 업체입니다. 음료수마다 당첨번호가 있습니다. 
   음료수의 당첨번호는 1개이고 당첨자의 정보를 알아야 상품을 배송할 수 있습니다.
   당첨 번호마다 당첨 상품이 있고, 당첨 상품이 배송 중인지 배송 완료인지 구분해야 합니다.
*/
--당첨상품 FK
--당첨번호 FK
--음료수 판매자 
--구매신청 FK
--배송 
--당첨자의정보(구매자)
--	구매자
CREATE SEQUENCE SEQ_BUYER;
CREATE TABLE TBL_BUYER(
	ID NUMBER CONSTRAINT PK_BUYER PRIMARY KEY,
	BUYER_NAME VARCHAR2(255) NOT NULL,
	BUYER_PHONE VARCHAR2(255) NOT NULL,
	BUYER_ADDRESS VARCHAR2(255) NOT NULL
);
-- 판매자
CREATE SEQUENCE SEQ_SELLER;
CREATE TABLE TBL_SELLER(
	ID NUMBER CONSTRAINT PK_SELLER PRIMARY KEY
);

--	당첨번호
CREATE SEQUENCE SEQ_WINNING_NUMBER;
CREATE TABLE TBL_WINNING_NUMBER(
	ID NUMBER CONSTRAINT PK_WINNING_NUMBER PRIMARY KEY,
	WINNING_NUMBER_NUMBER NUMBER NOT NULL UNIQUE,
	SELLER_ID NUMBER,
	CONSTRAINT FK_WINNING_NUMBER_SELLER FOREIGN KEY(SELLER_ID)
	REFERENCES TBL_SELLER(ID)
);
--	당첨상품
CREATE SEQUENCE SEQ_WINNING_PRODUCT;
CREATE TABLE TBL_WINNING_PRODUCT(
	ID NUMBER CONSTRAINT PK_WINNING_PRODUCT PRIMARY KEY,
	WINNING_PRODUCT_NAME VARCHAR2(255) NOT NULL,
	WINNING_PRODUCT_STOCK NUMBER DEFAULT 999,
	WINNING_NUMBER_ID NUMBER,
	CONSTRAINT FK_WINNING_PRODUCT_WINNING_NUMBER FOREIGN KEY(WINNING_NUMBER_ID)
	REFERENCES TBL_WINNING_NUMBER(ID)
);

--	구매신청
CREATE SEQUENCE SEQ_FORM;
CREATE TABLE TBL_FORM(
	ID NUMBER CONSTRAINT PK_FORM PRIMARY KEY,
	BUYER_ID NUMBER,
	SELLER_ID NUMBER,
	CONSTRAINT FK_FORM_BUYER FOREIGN KEY(BUYER_ID)
	REFERENCES TBL_BUYER(ID),
	CONSTRAINT FK_FORM_SELLER FOREIGN KEY(SELLER_ID)
	REFERENCES TBL_SELLER(ID)
);

--	배송업체
CREATE SEQUENCE SEQ_DELEVERY;
CREATE TABLE TBL_DELEVERY(
	ID NUMBER CONSTRAINT PK_DELEVERY PRIMARY KEY,
	DELEVERY_DELEVERING TIMESTAMP DEFAULT CURRENT_TIMESTAMP,
	DELEVERY_COMPLETE_DELEVERY TIMESTAMP,
	FORM_ID NUMBER,
	CONSTRAINT FK_DELEVERY_FORM FOREIGN KEY(FORM_ID)
	REFERENCES TBL_FORM(ID)
);	



--기업 1
CREATE SEQUENCE SEQ_COMPANY;
CREATE TABLE TBL_COMPANY(
	ID NUMBER CONSTRAINT PK_COMPANY PRIMARY KEY,
	COMPANY_NAME VARCHAR2(255) NOT NULL UNIQUE,
	COMPANY_ADDRESS VARCHAR2(255) NOT NULL,
	COMPANY_NUMBER NUMBER
);

--사용자 1
--   사용자 정보는 이름, 주소, 전화번호가 있습니다. 
CREATE SEQUENCE SEQ_USER;
CREATE TABLE TBL_USER(
	ID NUMBER CONSTRAINT PK_USER PRIMARY KEY,
	USER_NAME VARCHAR2(255) NOT NULL,
	USER_ADDRESS VARCHAR2(255) NOT NULL,
	USER_PHONE NUMBER
);
--상품 1
CREATE SEQUENCE SEQ_PRODUCT;
CREATE TABLE TBL_PRODUCT(
	ID NUMBER CONSTRAINT PK_PRODUCT PRIMARY KEY,
	PRODUCT_NAME VARCHAR2(255) NOT NULL UNIQUE,
	PRODUCT_PRICE NUMBER NOT NULL,
	PRODUCT_STOCK NUMBER DEFAULT 999
);
--카드 FK 카드정보
CREATE SEQUENCE SEQ_CARD;
CREATE TABLE TBL_CARD(
	ID NUMBER CONSTRAINT PK_CARD PRIMARY KEY,
	CARD_NAME VARCHAR2(255) NOT NULL,
	CARD_INFO_ID NUMBER,
	CONSTRAINT FK_CARD_CARD_INFO FOREIGN KEY(CARD_INFO_ID)
	REFERENCES TBL_CARD_INFO(ID)
);
--카드정보 FK 사용자
CREATE SEQUENCE SEQ_CARD_INFO;
CREATE TABLE TBL_CARD_INFO(
	ID NUMBER CONSTRAINT PK_CARD_INFO PRIMARY KEY,
	CARD_INFO_NUMBER NUMBER NOT NULL UNIQUE,
	CARD_INFO_COMPANY VARCHAR2(255) NOT NULL,
	USER_ID NUMBER,
	CONSTRAINT FK_CARD_INFO_USER FOREIGN KEY(USER_ID)
	REFERENCES TBL_USER(ID)
);
/*
요구사항
   이커머스 창업 준비중입니다. 
   기업과 사용자 간 거래를 위해 기업의 정보와 사용자 정보가 필요합니다.
   기업의 정보는 기업 이름, 주소, 대표번호가 있고
   결제 시 사용자 정보와 기업의 정보, 결제한 카드의 정보 모두 필요하며,
   상품의 정보도 필요합니다. 상품의 정보는 이름, 가격, 재고입니다.
   사용자는 등록한 카드의 정보를 저장할 수 있으며, 
   카드의 정보는 카드번호, 카드사, 회원 정보가 필요합니다.
*/
--결제 FK 기업, 사용자, 카드, 상품
CREATE SEQUENCE SEQ_PAY;
CREATE TABLE TBL_PAY(
	ID NUMBER CONSTRAINT PK_PAY PRIMARY KEY,
	USER_ID NUMBER,
	COMPANY_ID NUMBER,
	CARD_ID NUMBER,
	PRODUCT_ID NUMBER,
	CONSTRAINT FK_PAY_USER FOREIGN KEY(USER_ID)
	REFERENCES TBL_USER(ID),
	CONSTRAINT FK_PAY_COMPANY FOREIGN KEY(COMPANY_ID)
	REFERENCES TBL_COMPANY(ID),
	CONSTRAINT FK_PAY_CARD FOREIGN KEY(CARD_ID)
	REFERENCES TBL_CARD(ID),
	CONSTRAINT FK_PAY_PRODUCT FOREIGN KEY(PRODUCT_ID)
	REFERENCES TBL_PRODUCT(ID)
);
--거래 FK 결제
CREATE SEQUENCE SEQ_DEAL;
CREATE TABLE TBL_DEAL(
	ID NUMBER CONSTRAINT PK_DEAL PRIMARY KEY,
	PAY_ID NUMBER,
	CONSTRAINT FK_DEAL_PAY FOREIGN KEY(PAY_ID)
	REFERENCES TBL_PAY(ID)
);

